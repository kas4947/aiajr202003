<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.aia.op.member.dao.MemberDaoInterface">

	<!-- select의 결과를 객체에 바인딩 역할: 테이블의 컬럼명과 java beans의 변수의 이름이 틀린 경우 -->
	<resultMap id="resultMember"
		type="com.aia.op.member.model.Member">

		<id property="idx" column="idx" />
		<result property="uid" column="uid" />
		<result property="upw" column="upw" />
		<result property="uname" column="uname" />
		<result property="uphoto" column="uphoto" />

		<!-- 주석처리시 그 값은 null이 되어 들어감 <result property="upw" column="upw"/> -->
	</resultMap>
	
	<select id="selectTotalList"
			resultMap="resultMember">
			
			<include refid="selectFrom" />
			<!-- SELECT * FROM project.member ORDER BY idx DESC; -->
			ORDER BY idx DESC;
	</select>
	
	<select id="selectByIdx"
			resultType="com.aia.op.member.model.Member"
	>
	<include refid="selectFrom" />
	WHERE idx = #{id}
	<!-- SELECT * FROM project.member WHERE idx = #{id} -->
	
	</select>


	<select id="selectByIdpw"
		resultType="com.aia.op.member.model.Member">

		SELECT * FROM project.member WHERE uid = #{param1} AND upw
		= #{param2}

	</select>

	<select id="selectTotalListXml"
			resultType="com.aia.op.member.model.MemberXml"
	>
	
		SELECT * FROM project.member ORDER BY idx DESC;
	
	</select>
	
	<!-- 검색: id, name, id or name map.put("searchType", "id") name, both map.put("keyword", 
		"cool") -->

	<!-- <select id="selectBykeyword" parameterType="map"
		resultMap="resultMember">

		select * from project.member
		
		<where>

			<if test="searchType != null and keyword != null">
				<if test="searchType == 'both'">
					uid like concat('%',#{keyword},'%') or uname like concat('%',#{keyword},'%')
					where 가 바로뒤에 or 이 오면 생략 해 준다.
					<include refid="whereID" />
					<include refid="whereName" />

				</if>
				<if test="searchType == 'id'">
					uid like concat('%',#{keyword},'%')
					<include refid="whereID" />
				</if>
				<if test="searchType == 'name'">
					uname like concat('%',#{keyword},'%')
					<include refid="whereName" />
				</if>
			</if>
		</where>

	</select> -->
	
	<!-- map => HashMap -->
	<select id="totalCount" parameterType="map" resultType="int">
		<!-- #{search.searchType} -->
		
		SELECT count(*) FROM project.member
		
		<where>
			<if test="searchType!=null and keyword!=null">
				
				<if test="searchType == 'both'">
					<include refid="whereID" />
					<include refid="whereName" />
				</if>
				
				<if test="searchType == 'id'">
					<include refid="whereID" />
				</if>
				
				<if test="searchType == 'name'">
					<include refid="whereName" />
				</if>
				
			</if>
		</where>
		
	</select>
	
	<select id="selectList"
			parameterType="map"
			resultType="com.aia.op.member.model.Member"
	>
		SELECT * FROM project.member
		
		<where>
			<if test="searchType!=null and keyword!=null">
				
				<if test="searchType == 'both'">
					<include refid="whereID" />
					<include refid="whereName" />
				</if>
				
				<if test="searchType == 'id'">
					<include refid="whereID" />
				</if>
				
				<if test="searchType == 'name'">
					<include refid="whereName" />
				</if>
			</if>
		</where>
		
		
		LIMIT #{startRow}, #{count}
		
	</select>

	<sql id="whereID">
		OR uid LIKE CONCAT('%',#{keyword},'%')
	</sql>

	<sql id="whereName">
		OR uname LIKE CONCAT('%',#{keyword},'%')
	</sql>
	
	<sql id="selectFrom">
		SELECT * FROM project.member
	</sql>


	<insert id="insertMember"
		parameterType="com.aia.op.member.model.Member"
		useGeneratedKeys="true"
		keyProperty="idx"
		>
		INSERT INTO
		project.member (uid, upw, uname, uphoto )
		VALUES (#{uid},#{upw},#{uname},#{uphoto})
	</insert>



</mapper>